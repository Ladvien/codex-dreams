-- Create insights table for storing AI-generated insights from memories
CREATE TABLE IF NOT EXISTS public.insights (
    id UUID PRIMARY KEY DEFAULT gen_random_uuid(),
    content TEXT NOT NULL,
    insight_type VARCHAR(50) DEFAULT 'pattern',
    confidence_score FLOAT DEFAULT 0.5,
    source_memory_ids UUID[] DEFAULT '{}',
    metadata JSONB DEFAULT '{}',
    tags TEXT[] DEFAULT '{}',
    tier VARCHAR(20) DEFAULT 'working',
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    feedback_score FLOAT DEFAULT 0.0,
    version INTEGER DEFAULT 1
);

-- Create indexes for better query performance
CREATE INDEX IF NOT EXISTS idx_insights_created_at ON insights(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_insights_type ON insights(insight_type);
CREATE INDEX IF NOT EXISTS idx_insights_tags ON insights USING GIN(tags);
CREATE INDEX IF NOT EXISTS idx_insights_source_memories ON insights USING GIN(source_memory_ids);

-- Add comments for documentation
COMMENT ON TABLE insights IS 'Stores AI-generated insights derived from memory analysis';
COMMENT ON COLUMN insights.id IS 'Unique identifier for the insight';
COMMENT ON COLUMN insights.content IS 'The actual insight text generated by the AI';
COMMENT ON COLUMN insights.insight_type IS 'Type of insight (pattern, connection, learning, etc.)';
COMMENT ON COLUMN insights.confidence_score IS 'AI confidence in the insight (0-1)';
COMMENT ON COLUMN insights.source_memory_ids IS 'Array of memory IDs this insight was derived from';
COMMENT ON COLUMN insights.metadata IS 'Additional metadata including model used, generation parameters, etc.';
COMMENT ON COLUMN insights.tags IS 'Array of tags extracted or assigned to this insight';
COMMENT ON COLUMN insights.tier IS 'Memory tier (working, short_term, long_term)';
COMMENT ON COLUMN insights.feedback_score IS 'User feedback score for insight quality';
COMMENT ON COLUMN insights.version IS 'Version number for tracking insight updates';