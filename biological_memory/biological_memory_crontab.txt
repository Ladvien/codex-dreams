# Biological Memory Pipeline Crontab Schedule - BMP-008
# Mimics human sleep-wake cycles and memory consolidation patterns
# 
# SLEEP-WAKE CYCLE PHASES:
# - WAKE (6am-10pm): Active working memory processing
# - NREM SLEEP (10pm-2am): Initial consolidation, slow-wave onset  
# - DEEP SLEEP (2am-4am): Slow-wave sleep, deep consolidation
# - REM SLEEP (4am-6am): Creative connections, pattern completion
# - WEEKLY MAINTENANCE (Sunday 3am): Synaptic homeostasis

# Set environment variables for the biological memory pipeline
SHELL=/bin/bash
PATH=/usr/local/bin:/usr/bin:/bin
BIOLOGICAL_MEMORY_PATH=/Users/ladvien/codex-dreams/biological_memory
DBT_PROFILES_DIR=/Users/ladvien/.dbt
PYTHONPATH=/Users/ladvien/codex-dreams

# ========================================================================================
# CONTINUOUS PROCESSING - Working Memory (Active Wake Hours 6am-10pm)
# Mimics the active maintenance of working memory during conscious awareness
# Miller's 7Â±2 capacity with 5-second refresh cycles
# ========================================================================================

# Working Memory refresh every 5 seconds during wake hours (6am-10pm)
# Note: Most cron implementations don't support seconds, so we use a script approach
*/1 6-22 * * * cd $BIOLOGICAL_MEMORY_PATH && timeout 300 bash -c 'while true; do dbt run --select tag:working_memory --quiet; sleep 5; done' >> /var/log/biological_memory/working_memory.log 2>&1

# ========================================================================================
# RAPID PROCESSING - Short-Term Memory (Every 5 minutes, 24/7)
# Continuous STM processing mimicking biological short-term memory cycles
# Hierarchical episode formation and consolidation readiness assessment
# ========================================================================================

# STM processing every 5 minutes (continuous biological rhythm)
*/5 * * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run --select short_term_memory --quiet >> /var/log/biological_memory/stm.log 2>&1

# ========================================================================================
# CONSOLIDATION - Hippocampal Replay (Every hour during wake and light sleep)
# Simulates hippocampal sharp-wave ripples and memory replay during rest periods
# Pattern completion and Hebbian strengthening
# ========================================================================================

# Hippocampal replay consolidation every hour
0 * * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run --select consolidation --quiet >> /var/log/biological_memory/consolidation.log 2>&1

# ========================================================================================
# SLOW-WAVE SLEEP - Deep Consolidation (2-4 AM Daily)
# Simulates slow-wave sleep deep consolidation and systems-level memory transfer
# Full refresh to ensure data consistency during low-activity periods
# ========================================================================================

# Deep consolidation during slow-wave sleep (2-4 AM daily)
0 2 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run --select long_term_memory --full-refresh --quiet >> /var/log/biological_memory/deep_consolidation.log 2>&1
0 3 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run --select long_term_memory --full-refresh --quiet >> /var/log/biological_memory/deep_consolidation.log 2>&1
0 4 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run --select long_term_memory --full-refresh --quiet >> /var/log/biological_memory/deep_consolidation.log 2>&1

# ========================================================================================
# REM SLEEP - Creative Connections (Every 90 minutes during night, 10pm-6am)
# Simulates REM sleep creative processing and distant semantic associations
# Enhanced pattern completion and creative insight formation
# ========================================================================================

# REM sleep creative processing every 90 minutes during night hours (10pm-6am)
# 90 minutes = 1.5 hours, so we trigger at: 10:00pm, 11:30pm, 1:00am, 2:30am, 4:00am, 5:30am
0 22 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run-operation strengthen_associations --quiet >> /var/log/biological_memory/rem_sleep.log 2>&1
30 23 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run-operation strengthen_associations --quiet >> /var/log/biological_memory/rem_sleep.log 2>&1
0 1 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run-operation strengthen_associations --quiet >> /var/log/biological_memory/rem_sleep.log 2>&1
30 2 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run-operation strengthen_associations --quiet >> /var/log/biological_memory/rem_sleep.log 2>&1
0 4 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run-operation strengthen_associations --quiet >> /var/log/biological_memory/rem_sleep.log 2>&1
30 5 * * * cd $BIOLOGICAL_MEMORY_PATH && dbt run-operation strengthen_associations --quiet >> /var/log/biological_memory/rem_sleep.log 2>&1

# ========================================================================================
# WEEKLY HOMEOSTASIS - Synaptic Scaling (Sunday 3 AM)
# Simulates weekly synaptic homeostasis and network rebalancing
# Prevents runaway potentiation and maintains network stability
# ========================================================================================

# Weekly synaptic homeostasis (Sunday 3 AM)
0 3 * * 0 cd $BIOLOGICAL_MEMORY_PATH && dbt run-operation synaptic_homeostasis --quiet >> /var/log/biological_memory/homeostasis.log 2>&1

# ========================================================================================
# ERROR MONITORING AND RECOVERY
# Health checks and automated recovery mechanisms
# ========================================================================================

# Health check every 15 minutes
*/15 * * * * cd $BIOLOGICAL_MEMORY_PATH && python3 -c "
import duckdb
import logging
from pathlib import Path
import sys

# Set up logging
log_dir = Path('/var/log/biological_memory')
log_dir.mkdir(exist_ok=True)
logging.basicConfig(filename=log_dir / 'health_check.log', level=logging.INFO)

try:
    # Test database connectivity
    conn = duckdb.connect('dbs/memory.duckdb')
    conn.execute('SELECT COUNT(*) FROM information_schema.tables').fetchone()
    conn.close()
    logging.info(f'Health check passed at {datetime.now()}')
except Exception as e:
    logging.error(f'Health check failed at {datetime.now()}: {e}')
    sys.exit(1)
" || echo "Health check failed at $(date)" >> /var/log/biological_memory/health_check.log

# Log rotation for biological memory logs (daily at midnight)
0 0 * * * find /var/log/biological_memory -name "*.log" -type f -mtime +7 -delete

# ========================================================================================
# PERFORMANCE MONITORING
# Track processing times and biological rhythm adherence
# ========================================================================================

# Performance metrics collection every hour
0 * * * * cd $BIOLOGICAL_MEMORY_PATH && python3 -c "
import json
from datetime import datetime
from pathlib import Path

metrics = {
    'timestamp': datetime.now().isoformat(),
    'working_memory_cycles': 'logged separately',
    'stm_processing': 'every 5 minutes',
    'consolidation': 'hourly',
    'deep_consolidation': '2-4am daily',
    'rem_processing': '90min cycles night',
    'homeostasis': 'sunday 3am weekly'
}

metrics_dir = Path('/var/log/biological_memory')
metrics_dir.mkdir(exist_ok=True)

with open(metrics_dir / 'performance_metrics.jsonl', 'a') as f:
    f.write(json.dumps(metrics) + '\n')
" >> /var/log/biological_memory/metrics.log 2>&1