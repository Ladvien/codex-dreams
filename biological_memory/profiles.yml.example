# dbt Profile Configuration Example for Biological Memory Pipeline
# Copy this file to ~/.dbt/profiles.yml and customize for your environment

biological_memory:
  outputs:
    dev:
      type: duckdb
      path: '/Users/ladvien/codex-dreams/biological_memory/dbs/memory.duckdb'
      
      # PostgreSQL Scanner Extension Configuration
      # Enables cross-database queries between DuckDB and PostgreSQL
      extensions:
        - postgres_scanner  # DuckDB extension for PostgreSQL connectivity
        - fts              # Full-text search support
        - json             # JSON processing capabilities
        
      # PostgreSQL Connection Configuration
      # Uncomment and configure for your PostgreSQL server
      external_sources:
        postgresql:
          # Connection details for postgres_scanner extension
          host: 'localhost'
          port: 5432
          database: 'biological_memory_source'
          schema: 'public'
          user: 'your_postgres_user'
          password: 'your_postgres_password'
          
      # Performance Settings for Cross-Database Operations
      settings:
        # Memory allocation for postgres_scanner operations
        memory_limit: '4GB'
        threads: 4
        
        # Postgres scanner specific settings
        postgres_scanner_timeout: 30000  # 30 second timeout
        postgres_scanner_batch_size: 10000
        
    prod:
      type: duckdb
      path: '/production/biological_memory/dbs/memory.duckdb'
      
      extensions:
        - postgres_scanner
        - fts
        - json
        
      external_sources:
        postgresql:
          host: '{{ env_var("POSTGRES_HOST") }}'
          port: '{{ env_var("POSTGRES_PORT", "5432") | int }}'
          database: '{{ env_var("POSTGRES_DATABASE") }}'
          schema: 'public'
          user: '{{ env_var("POSTGRES_USER") }}'
          password: '{{ env_var("POSTGRES_PASSWORD") }}'
          
      settings:
        memory_limit: '8GB'
        threads: 8
        postgres_scanner_timeout: 60000
        postgres_scanner_batch_size: 50000

  target: dev

# Environment Variable Examples:
# export POSTGRES_HOST="your-postgres-server.com"
# export POSTGRES_PORT="5432" 
# export POSTGRES_DATABASE="biological_memory_source"
# export POSTGRES_USER="your_username"
# export POSTGRES_PASSWORD="your_password"

# Usage Notes:
# 1. Install postgres_scanner extension: INSTALL postgres_scanner;
# 2. Load extension in each session: LOAD postgres_scanner;
# 3. Create foreign data wrapper connection as defined in setup_duckdb.sql
# 4. Use sources.yml to reference PostgreSQL tables via postgres_scanner