# dbt profiles.yml configuration for Biological Memory System
# Copy this file to ~/.dbt/profiles.yml and update with your settings
# 
# This configuration enables DuckDB to connect to PostgreSQL databases
# using the postgres_scanner extension for accessing remote memory data

biological_memory:
  target: dev
  outputs:
    dev:
      type: duckdb
      path: "{{ env_var('DUCKDB_PATH') }}"
      threads: 8
      extensions:
        - httpfs
        - postgres
        - json
      attach:
        - type: postgres
          alias: source_memories
          path: "{{ env_var('POSTGRES_DB_URL') }}"
      settings:
        memory_limit: 8GB
        enable_external_access: false
        ollama_url: "{{ env_var('OLLAMA_URL') }}"
        ollama_model: "{{ env_var('OLLAMA_MODEL') }}"
        prompt_model: "ollama"
        prompt_base_url: "{{ env_var('OLLAMA_URL') }}"
        prompt_model_name: "{{ env_var('OLLAMA_MODEL') }}"
    prod:
      type: duckdb
      path: "{{ env_var('DUCKDB_PATH') }}"
      threads: 8
      extensions:
        - httpfs
        - postgres
        - json
      attach:
        - type: postgres
          alias: source_memories
          path: "{{ env_var('POSTGRES_DB_URL') }}"
      settings:
        memory_limit: 16GB
        enable_external_access: false
    test:
      type: duckdb
      path: "/tmp/test_biological_memory.duckdb"
      threads: 4
      extensions:
        - httpfs
        - postgres
        - json
      attach:
        - type: postgres
          alias: source_memories
          path: "{{ env_var('TEST_DATABASE_URL') }}"
      settings:
        memory_limit: 2GB
        enable_external_access: false